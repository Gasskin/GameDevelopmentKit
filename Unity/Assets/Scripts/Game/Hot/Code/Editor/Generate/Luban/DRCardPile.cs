
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using SimpleJSON;
using Luban;

namespace Game.Hot.Editor
{

public sealed class DRCardPile :  Luban.EditorBeanBase 
{
    public DRCardPile()
    {
            CardPile = ECardPile.Base;
            CardAttr = ECardAttr.Jin;
    }

    public override void LoadJson(SimpleJSON.JSONObject _json)
    {
        { 
            var _fieldJson = _json["Id"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Id = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["CardPile"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { CardPile = (ECardPile)System.Enum.Parse(typeof(ECardPile), _fieldJson); } else if(_fieldJson.IsNumber) { CardPile = (ECardPile)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
        }
        
        { 
            var _fieldJson = _json["CardConfig"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  CardConfig = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["Num"];
            if (_fieldJson != null)
            {
                if(!_fieldJson.IsNumber) { throw new SerializationException(); }  Num = _fieldJson;
            }
        }
        
        { 
            var _fieldJson = _json["CardAttr"];
            if (_fieldJson != null)
            {
                if(_fieldJson.IsString) { CardAttr = (ECardAttr)System.Enum.Parse(typeof(ECardAttr), _fieldJson); } else if(_fieldJson.IsNumber) { CardAttr = (ECardAttr)(int)_fieldJson; } else { throw new SerializationException(); }  
            }
        }
        
    }

    public override void SaveJson(SimpleJSON.JSONObject _json)
    {
        {
            _json["Id"] = new JSONNumber(Id);
        }
        {
            _json["CardPile"] = new JSONNumber((int)CardPile);
        }
        {
            _json["CardConfig"] = new JSONNumber(CardConfig);
        }
        {
            _json["Num"] = new JSONNumber(Num);
        }
        {
            _json["CardAttr"] = new JSONNumber((int)CardAttr);
        }
    }

    public static DRCardPile LoadJsonDRCardPile(SimpleJSON.JSONNode _json)
    {
        DRCardPile obj = new DRCardPile();
        obj.LoadJson((SimpleJSON.JSONObject)_json);
        return obj;
    }
        
    public static void SaveJsonDRCardPile(DRCardPile _obj, SimpleJSON.JSONNode _json)
    {
        _obj.SaveJson((SimpleJSON.JSONObject)_json);
    }

    /// <summary>
    /// 编号
    /// </summary>
    public int Id;

    /// <summary>
    /// 所属牌堆
    /// </summary>
    public ECardPile CardPile;

    /// <summary>
    /// 卡牌配置
    /// </summary>
    public int CardConfig;

    /// <summary>
    /// 点数
    /// </summary>
    public int Num;

    /// <summary>
    /// 属性
    /// </summary>
    public ECardAttr CardAttr;

}

}

